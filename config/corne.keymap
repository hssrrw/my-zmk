/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// This is the Colemak-DH keymap for the Corne 36 keyboard inspired by Miryoku.

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer { // Base
            bindings = <
//      ╭────────────┬────────────┬────────────┬────────────┬────────────╮   ╭────────────┬────────────┬────────────┬────────────┬────────────╮
//      │ Q          │ W          │ F          │ P          │ B          │   │ J          │ L          │ U          │ Y          │ !          │
&trans  &kp Q        &kp W        &kp F        &kp P        &kp B            &kp J        &kp L        &kp U        &kp Y        &kp EXCL       &trans
//      ├────────────┼────────────┼────────────┼────────────┼────────────┤   ├────────────┼────────────┼────────────┼────────────┼────────────┤
//      │ Ctrl A     │ Alt R      │ Shift S    │ GUI T      │ G          │   │ M          │ GUI N      │ Shift E    │ Alt I      │ Ctrl O     │
&trans  &mt LCTRL A  &mt LALT R   &mt LSHIFT S &mt LGUI T   &kp G            &kp M        &mt RGUI N   &mt RSHIFT E &mt RALT I   &mt LCTRL O    &trans
//      ├────────────┼────────────┼────────────┼────────────┼────────────┤   ├────────────┼────────────┼────────────┼────────────┼────────────┤
//      │ Z          │ X          │ C          │ D          │ V          │   │ K          │ H          │ ,          │ .          │ ?          │
&trans  &kp Z        &kp X        &kp C        &kp D        &kp V            &kp K        &kp H        &kp COMMA    &kp DOT      &kp QMARK      &trans
//      ╰────────────┴────────────┼────────────┼────────────┼────────────┤   ├────────────┼────────────┼────────────┼────────────┴────────────╯
//                                │ Esc        │ Lwr Space  │ Tab        │   │ Enter      │ Rse Bksp   │ Del        │
                                  &kp ESC      &lp 1 SPACE  &kp TAB          &kp RET      &lp 2 BSPC   &kp DEL
//                                ╰────────────┴────────────┴────────────╯   ╰────────────┴────────────┴────────────╯
            >;
        };

        lower_layer { // F keys + Navigation + Clipboard
            bindings = <
//      ╭────────────┬────────────┬────────────┬────────────┬────────────╮   ╭────────────┬────────────┬────────────┬────────────┬────────────╮
//      │ F1         │ F2         │ F3         │ F4         │ F5         │   │ F8         │ F9         │ F10        │ F11        │ F12        │
&trans  &kp F1       &kp F2       &kp F3       &kp F4       &kp F5           &kp F8       &kp F9       &kp F10      &kp F11      &kp F12        &trans
//      ├────────────┼────────────┼────────────┼────────────┼────────────┤   ├────────────┼────────────┼────────────┼────────────┼────────────┤
//      │ Ctrl       │ Alt        │ Shift      │ GUI        │            │   │ F7         │ Left       │ Down       │ Up         │ Right      │
&trans  &kp LCTRL    &kp LALT     &kp LSHIFT   &kp LGUI     &kp F6           &kp F7       &kp LEFT     &kp DOWN     &kp UP       &kp RIGHT      &trans
//      ├────────────┼────────────┼────────────┼────────────┼────────────┤   ├────────────┼────────────┼────────────┼────────────┼────────────┤
//      │ Undo       │ Cut        │ Copy       │ Paste      │ Redo       │   │ Redo       │ Paste      │ Copy       │ Cut        │ Undo       │
&trans  &kp K_UNDO   &kp K_CUT    &kp K_COPY   &kp K_PASTE  &kp K_REDO       &kp K_REDO   &kp K_PASTE  &kp K_COPY   &kp K_CUT    &kp K_UNDO     &trans
//      ╰────────────┴────────────┼────────────┼────────────┼────────────┤   ├────────────┼────────────┼────────────┼────────────┴────────────╯
//                                │            │            │            │   │ Enter      │ Bksp       │ Del        │
                                  &trans       &trans       &trans           &kp RET      &kp BSPC     &kp DEL
//                                ╰────────────┴────────────┴────────────╯   ╰────────────┴────────────┴────────────╯
            >;
        };

// symbols by frequency (descending):
// '.,:{;-(=/_<@*$?[|!&`#%+"\°^
// .',:{(;=/-_<@?[*|!$&`"#+%\~

        raise_layer { // Numbers + Symbols
            bindings = <
//      ╭────────────┬────────────┬────────────┬────────────┬────────────╮   ╭────────────┬────────────┬────────────┬────────────┬────────────╮
//      │ 1          │ 2          │ 3          │ 4          │ 5          │   │ 6          │ 7          │ 8          │ 9          │ 0          │
&trans  &kp N1       &kp N2       &kp N3       &kp N4       &kp N5           &kp N6       &kp N7       &kp N8       &kp N9       &kp N0         &trans
//      ├────────────┼────────────┼────────────┼────────────┼────────────┤   ├────────────┼────────────┼────────────┼────────────┼────────────┤
//      │ <          │ [          │ (          │ {          │ }          │   │ %          │ -          │ ;          │ /          │ @          │
&trans  &kp LT       &kp LBKT     &kp LPAR     &kp LBRC     &kp RBRC         &kp PRCNT    &kp MINUS    &kp SEMI     &kp FSLH     &kp AT         &trans
//      ├────────────┼────────────┼────────────┼────────────┼────────────┤   ├────────────┼────────────┼────────────┼────────────┼────────────┤
//      │ `          │ "          │ &          │ $          │ ~          │   │ \          │ |          │ *          │ +          │ #          │
&trans  &kp GRAVE    &kp DQT      &kp AMPS     &kp DLLR     &kp TILDE        &kp BSLH     &kp PIPE     &kp STAR     &kp PLUS     &kp HASH       &trans
//      ╰────────────┴────────────┼────────────┼────────────┼────────────┤   ├────────────┼────────────┼────────────┼────────────┴────────────╯
//                                │ Esc        │ Space      │ Tab        │   │            │            │            │
                                  &kp ESC      &kp SPACE    &kp TAB          &trans       &trans       &trans
//                                ╰────────────┴────────────┴────────────╯   ╰────────────┴────────────┴────────────╯
            >;
        };

        tri_layer { // Media controls + Misc
            bindings = <
//      ╭────────────┬────────────┬────────────┬────────────┬────────────╮   ╭────────────┬────────────┬────────────┬────────────┬────────────╮
//      │            │            │            │            │            │   │            │            │            │            │            │
&trans  &trans       &trans       &trans       &trans       &trans           &trans       &trans       &trans       &trans       &trans         &trans
//      ├────────────┼────────────┼────────────┼────────────┼────────────┤   ├────────────┼────────────┼────────────┼────────────┼────────────┤
//      │            │ Bright Dwn │ Bright Up  │ Globe      │            │   │            │ Mute       │ Volume Up  │ Volume Dwn │            │
&trans  &trans       &kp C_BRI_DN &kp C_BRI_UP &kp GLOBE    &trans           &trans       &kp C_MUTE   &kp C_VOL_UP &kp C_VOL_DN &trans         &trans
//      ├────────────┼────────────┼────────────┼────────────┼────────────┤   ├────────────┼────────────┼────────────┼────────────┼────────────┤
//      │            │            │            │            │            │   │            │ Previous   │ Play       │ Next       │            │
&trans  &trans       &trans       &trans       &trans       &trans           &trans       &kp C_PREV   &kp C_PP     &kp C_NEXT   &trans         &trans
//      ╰────────────┴────────────┼────────────┼────────────┼────────────┤   ├────────────┼────────────┼────────────┼────────────┴────────────╯
//                                │            │            │            │   │            │            │            │
                                  &trans       &trans       &trans           &trans       &trans       &trans
//                                ╰────────────┴────────────┴────────────╯   ╰────────────┴────────────┴────────────╯
            >;
        };
    };

    combos {
        compatible = "zmk,combos";

        // Global
        combo_esc {
            // Esc
            key-positions = <1 2>;
            bindings = <&kp ESC>;
        };

        // Base
        combo_apostrophe {
            // '
            key-positions = <15 16>;
            bindings = <&kp SQT>;
            layers = <0>;
        };
        combo_colon {
            // :
            key-positions = <19 20>;
            bindings = <&kp COLON>;
            layers = <0>;
        };
        combo_equal {
            // =
            key-positions = <20 21>;
            bindings = <&kp EQUAL>;
            layers = <0>;
        };
        combo_caret {
            // ^
            key-positions = <29 28>;
            bindings = <&kp CARET>;
            layers = <0>;
        };
        combo_underscore {
            // _
            key-positions = <31 32>;
            bindings = <&kp UNDER>;
            layers = <0>;
        };

        // Raise
        combo_closing_parenthesis {
            // )
            key-positions = <15 16>;
            bindings = <&kp RPAR>;
            layers = <2>;
        };
        combo_closing_bracket {
            // ]
            key-positions = <14 15>;
            bindings = <&kp RBKT>;
            layers = <2>;
        };
        combo_greater_than {
            // >
            key-positions = <13 14>;
            bindings = <&kp GT>;
            layers = <2>;
        };
    };
};
